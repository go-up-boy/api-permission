// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	authlogin "api-permission/internal/handler/auth/login"
	authroles "api-permission/internal/handler/auth/roles"
	authrules "api-permission/internal/handler/auth/rules"
	authusers "api-permission/internal/handler/auth/users"
	"api-permission/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/username",
				Handler: authlogin.LoginHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/auth/login"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Permissions},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/create",
					Handler: authusers.CreateHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/update",
					Handler: authusers.UpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/view",
					Handler: authusers.ViewHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/list",
					Handler: authusers.ListHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/auth/users"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Permissions},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/add",
					Handler: authrules.CreateHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/update",
					Handler: authrules.UpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/view",
					Handler: authrules.ViewHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/list",
					Handler: authrules.ListHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/auth/rules"),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Permissions},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/create",
					Handler: authroles.CreateHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/update",
					Handler: authroles.UpdateHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/view",
					Handler: authroles.ViewHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/list",
					Handler: authroles.ListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/add_rules",
					Handler: authroles.AddRulesHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/api/auth/roles"),
	)
}
